// <auto-generated />
using System;
using KurirServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KurirServer.Migrations
{
    [DbContext(typeof(KurirDbContext))]
    [Migration("20190823105610_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KurirServer.Entities.Delivery", b =>
                {
                    b.Property<int>("DeliveryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourierID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<decimal>("DeliveryPrice");

                    b.Property<int>("DeliveryTypeID");

                    b.Property<string>("Description");

                    b.Property<int>("DispatcherID");

                    b.Property<string>("EndAddress");

                    b.Property<int>("EndLocationID");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("NameEnd");

                    b.Property<string>("NameStart");

                    b.Property<int>("PaymentTypeID");

                    b.Property<string>("PhoneOfEnd");

                    b.Property<string>("PhoneOfStart");

                    b.Property<string>("StartAddress");

                    b.Property<int>("StartLocationID");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("UserID");

                    b.Property<int>("WaitingInMinutes");

                    b.Property<int>("ZoneEnd");

                    b.Property<int>("ZoneStart");

                    b.HasKey("DeliveryID");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("KurirServer.Entities.DeliveryType", b =>
                {
                    b.Property<int>("DeliveryTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeliveryTypeName")
                        .IsRequired();

                    b.HasKey("DeliveryTypeID");

                    b.ToTable("DeliveryTypes");

                    b.HasData(
                        new
                        {
                            DeliveryTypeID = 1,
                            DeliveryTypeName = "Regular"
                        },
                        new
                        {
                            DeliveryTypeID = 2,
                            DeliveryTypeName = "Return shipping"
                        },
                        new
                        {
                            DeliveryTypeID = 3,
                            DeliveryTypeName = "Shoping"
                        },
                        new
                        {
                            DeliveryTypeID = 4,
                            DeliveryTypeName = "Post service"
                        });
                });

            modelBuilder.Entity("KurirServer.Entities.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int>("UserID");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("KurirServer.Entities.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentTypeName");

                    b.HasKey("PaymentTypeID");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            PaymentTypeID = 1,
                            PaymentTypeName = "Kes"
                        },
                        new
                        {
                            PaymentTypeID = 2,
                            PaymentTypeName = "Preko racuna"
                        },
                        new
                        {
                            PaymentTypeID = 3,
                            PaymentTypeName = "Kupon"
                        });
                });

            modelBuilder.Entity("KurirServer.Entities.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired();

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleName = "SuperAdmin"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleID = 4,
                            RoleName = "Courier"
                        },
                        new
                        {
                            RoleID = 5,
                            RoleName = "Dispatcher"
                        });
                });

            modelBuilder.Entity("KurirServer.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActiveUserRoleID");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Mail")
                        .IsRequired();

                    b.Property<string>("Pass")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<DateTime>("RegistrationDate");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KurirServer.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID");

                    b.Property<int>("UserID");

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
